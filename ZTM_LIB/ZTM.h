/****************************************Copyright (c)****************************************************
**                               Guangzhou ZHIYUAN electronics Co.,LTD.
**
**                                 http://www.embedtools.com
**
**--------------File Info-------------------------------------------------------------------------------
** File Name:           ZTM.h
** Last modified Date:  2011-06-03
** Last Version:        v1.00
** Description:         基于LPC1700系列微控制器的ZTM_LIB驱动库头文件
**
**------------------------------------------------------------------------------------------------------
** Created By:          He Zengfu
** Created date:        2011-06-03
** Version:             v1.00
** Descriptions:        创建文件
**
**------------------------------------------------------------------------------------------------------
** Modified by:         WangWenXiong
** Modified date:       2012-02-24
** Version:             V1.01
** Description:         增加 ZTM_HandOn函数；
**                      增加 ZTM_SetIdleType函数；
**                      增加 ZTM_SetSysMouseDis函数；
**                      修改 ZTM_ClrScreen函数；
**                      删除 ZTM_TouchMode函数；
**                      增加 ZTM_CheckTouchPos函数；
**                      删除 ZTM_BeepOnOff函数；
**                      增加 ZTM_SetBuzzer函数；
**                      修改 ZTM_LightTimeTouch函数；
**                      增加 ZTM_SetBaudrate函数；
**                      增加 ZTM_SetDisplayBuf函数；
**                      增加 ZTM_SetAck函数；
**                      增加 ZTM_SetTouchType函数；
**                      增加 ZTM_SetBuzzerType函数；
**                      增加 ZTM_SetTxtBackgroundType函数；
**                      增加 ZTM_SetSysMouseType函数；
**                      增加 ZTM_SetSumCheckType函数；
**                      增加 ZTM_SetTouchDelay函数；
**                      增加 ZTM_ReadDeviceInfo函数；
**                      增加 ZTM_OptDisBufDirectly函数；
**                      增加 ZTM_FileDownload函数。
**
*********************************************************************************************************/
#ifndef __ZTM_H
#define __ZTM_H
/*********************************************************************************************************
  需要引入的头文件
*********************************************************************************************************/
#include "stm32f10x.h"                                                    /* LPC17xx外设寄存器            */
#include <string.h>
#include <math.h>

#include "bsp_usart.h" 

/*********************************************************************************************************
  定义与编译器无关的数据类型
*********************************************************************************************************/
typedef unsigned char  BOOLEAN;                                         /* 布尔变量                     */
typedef unsigned char  INT8U;                                           /* 无符号8位整型变量            */
typedef signed   char  INT8S;                                           /* 有符号8位整型变量            */
typedef unsigned short INT16U;                                          /* 无符号16位整型变量           */
typedef signed   short INT16S;                                          /* 有符号16位整型变量           */
typedef unsigned long  INT32U;                                          /* 无符号32位整型变量           */
typedef signed   long  INT32S;                                          /* 有符号32位整型变量           */
typedef float          FP32;                                            /* 单精度浮点数（32位长度）     */
typedef double         FP64;                                            /* 双精度浮点数（64位长度）     */

typedef unsigned long  uint32;                                          /* 无符号32位整型变量           */
typedef signed   long  int32s;                                          /* 有符号32位整型变量           */
typedef unsigned short uint16;                                          /* 无符号16位整型变量           */
typedef unsigned char  uint8;                                           /* 无符号8位整型变量            */

/* *************************************** 串口显示终端驱动库底层相关定义 *******************************/

/*********************************************************************************************************
  串口显示终端BUSY引脚定义
*********************************************************************************************************/
#define BUSY_PIN_STATE()                GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0)

/*********************************************************************************************************
  查忙功能使能
*********************************************************************************************************/
#define BUSY_EN                          1                              /* BUSY引脚使能标志             */

/*********************************************************************************************************
  串口显示终端繁忙状态定义
*********************************************************************************************************/
#define ZTM_BUSY                         1                              /* 智能显示终端正忙             */
#define ZTM_FREE                         0                              /* 智能显示终端空闲             */

/* *************************************** 串口显示终端驱动库应用层相关定义 *****************************/

/*********************************************************************************************************
  显示终端按键获取标志定义
*********************************************************************************************************/
#define  KEYVALID            1                                          /* 按键有效标志                 */
#define  KEYINVALID          0                                          /* 按键无效标志                 */

/*********************************************************************************************************
  显示终端坐标定义
*********************************************************************************************************/
#define  ZTM_XADDR_MAX       320                                        /* 液晶X轴坐标最大值            */
#define  ZTM_YADDR_MAX       240                                        /* 液晶Y轴坐标最大值            */

/*********************************************************************************************************
  字符间距定义
*********************************************************************************************************/
#define  CHAR_XSTEP_MAX      256                                        /* 字符间距x最大值              */
#define  CHAR_YSTEP_MAX      256                                        /* 字符间距y最大值              */

/*********************************************************************************************************
  光标尺寸定义
*********************************************************************************************************/
#define  CURSOR_WIDE_MAX     32                                         /* 光标宽度最大值               */
#define  CURSOR_HEIGHT_MAX   32                                         /* 光标高度最大值               */

/*********************************************************************************************************
  内存中图片序号最大值
*********************************************************************************************************/
#define  PICTURE_ID_MAX      65536                                      /* 内存图片序号最大值           */

/*********************************************************************************************************
  背光定义
*********************************************************************************************************/
#define  LIGHT_TIME_MAX      255                                        /* 最大背光时间，单位：秒       */
#define  LIGHT_PWMLEVEL_MAX  100                                        /* PWM可调节的最大背光亮度      */

/*********************************************************************************************************
  动画播放定义
*********************************************************************************************************/
#define  CARTOON_TIME_MAX    255                                        /* 动画播放最大时长，单位：100ms*/

/*********************************************************************************************************
  显示终端颜色宏定义
*********************************************************************************************************/
#define  BLACK               0x0000                                     /* 黑色：    0,   0,   0        */
#define  NAVY                0x000F                                     /* 深蓝色：  0,   0, 128        */
#define  DGREEN              0x03E0                                     /* 深绿色：  0, 128,   0        */
#define  DCYAN               0x03EF                                     /* 深青色：  0, 128, 128        */
#define  MAROON              0x7800                                     /* 深红色：  128,  0,  0        */
#define  PURPLE              0x780F                                     /* 紫色：    128,  0,128        */
#define  OLIVE               0x7BE0                                     /* 橄榄绿：  128,128,  0        */
#define  LGRAY               0xC618                                     /* 灰白色：  192,192,192        */
#define  DGRAY               0x7BEF                                     /* 深灰色：  128,128,128        */
#define  BLUE                0x001F                                     /* 蓝色：    0,    0,255        */
#define  GREEN               0x07E0                                     /* 绿色：    0,  255,  0        */
#define  CYAN                0x07FF                                     /* 青色：    0,  255,255        */
#define  RED                 0xF800                                     /* 红色：    255,   0, 0        */
#define  MAGENTA             0xF81F                                     /* 品红：    255,   0,255       */
#define  YELLOW              0xFFE0                                     /* 黄色：    255, 255, 0        */
#define  WHITE               0xFFFF                                     /* 白色：    255, 255,255       */

/*********************************************************************************************************
  显示终端字符显示类型
*********************************************************************************************************/
#define  ASC_6x8             8                                          /* 6x8 ASCII字符                */
#define  GBK_12x12           12                                         /* 12x12 GBK扩展码              */
#define  GBK_16x16           16                                         /* 16x16 GBK扩展码              */
#define  GBK2132_24x24       24                                         /* 24x24 GBK2132内码            */
#define  GBK2132_32x32       32                                         /* 32x32 GBK2132内码            */


#define  ALIGN_LEFT           0
#define  ALIGN_RIGHT          1
#define  ALIGN_ZERO_RIGHT     2

/*********************************************************************************************************
  全局变量声明
*********************************************************************************************************/
extern INT16U GusFColor;
extern INT16U GusBColor;
extern INT16S GsKeyXY[2];                                               /* 触摸屏获得的坐标值           */
extern INT8U  GucKeyFlag;                                               /* 按键按下的标志               */

/*****************************串口显示终端驱动库底层函数声明 ********************************************/

/*********************************************************************************************************
** 函数名称:  uartInit
** 函数功能:  串口初始化，设置为8位数据位，1位停止位，无奇偶校验
** 输入参数:  ulBaud：串口波特率
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
//extern void uartInit (INT32U ulBaud);

/*********************************************************************************************************
** 函数名称:  uartSendChar
** 函数功能:  向串口发送字节数据，并等待数据发送完成，使用查询方式
** 输入参数:  ucDat:    要发送的数据
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void uartSendBuff (INT8U ucDat[],INT16U len);

/*********************************************************************************************************
** 函数名称:  ZTM_Delay
** 函数功能:  延时函数
** 输入参数:  ulTime：  延时时间
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_Delay (INT32U ulTime);

/*********************************************************************************************************
** 函数名称:  UART0_IRQHandler
** 函数功能:  UART0 中断处理函数
** 输入参数:  无
** 输出参数:  将获取的触摸屏x，y坐标值保存到GsKeyXY数组中
** 返 回 值:  无
*********************************************************************************************************/
extern void UART0_IRQHandler (void);

/*********************************************************************************************************
** 函数名称:  ZTM_BusyStat
** 函数功能:  忙状态检测
** 输入参数:  无
** 输出参数:  无
** 返 回 值:  状态值 1：显示终端忙，0：显示终端空闲
*********************************************************************************************************/
extern INT8U ZTM_BusyStat (void);

/* ****************************串口显示终端应用层函数声明************************************************/

/*
 * 握手指令
 */

/*********************************************************************************************************
** 函数名称:  ZTM_HandOn
** 函数功能:  发送握手指令
** 输入参数:  无
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_HandOn (void);

/*********************************************************************************************************
** 函数名称:  ZTM_SetIdleType
** 函数功能:  终端指令缓存状体引脚（Busy）有效电平设置
** 输入参数:  ucIdleType：终端指令缓存状体引脚有效电平设置参数；0x00――低电平有效，0xFF――高电平有效
** 输出参数:  无
** 返 回 值:  正确返回1，错误返回0
*********************************************************************************************************/
extern INT8U ZTM_SetIdleType (INT8U ucIdleType);

/*
 *  显示系统鼠标
 */
/*********************************************************************************************************
** 函数名称:  ZTM_SetSysMouseDis
** 函数功能:  系统鼠标显示设置
** 输入参数:  ucMouseID：系统鼠标图片ID；
**            usX      ：显示起始点的X坐标
**            usY      ：显示起始点的Y坐标
** 输出参数:  无
** 返 回 值:  正确返回1，错误返回0
*********************************************************************************************************/
extern INT8U ZTM_SetSysMouseDis (INT8U ucMouseID, INT16U usX, INT16U usY);

/*
 * 显示参数配置
 */
/*********************************************************************************************************
** 函数名称:  ZTM_SetColor
** 函数功能:  设置调色板
** 输入参数:  usFcolor：     前景色
**            usBcolor：     背景色
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_SetColor (INT16U usFcolor, INT16U usBcolor);

/*********************************************************************************************************
** 函数名称:  ZTM_SetCharDis
** 函数功能:  设置字符显示间距
** 输入参数:  ucDx：         字间距（横向） 0-255
**            ucDy：         行间距（纵向） 0-255
** 输出参数:  正确返回1，否则返回0
** 返 回 值:  无
*********************************************************************************************************/
extern INT8U ZTM_SetCharDis (INT8U ucDx, INT8U ucDy);

/*********************************************************************************************************
** 函数名称:  ZTM_SetCursor
** 函数功能:  设置光标显示
** 输入参数:  ucMode：       光标显示模式  0:关   1:开
**            usX：          横坐标（位置）
**            usY：          纵坐标
**            ucWide：       光标宽度，0x01~0x1f
**            ucHeight：     光标高度，0x01~0x1f
** 输出参数:  正确返回1，否则返回0
** 返 回 值:  无
*********************************************************************************************************/
extern INT8U ZTM_SetCursor (INT8U ucMode, INT16U usX, INT16U usY, INT8U ucWide, INT8U ucHeight);

/*********************************************************************************************************
** 函数名称:  ZTM_SetFilterColor
** 函数功能:  设置过滤色
** 输入参数:  usFilterColorLow ~ usFilterColorHigh  过滤颜色范围
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_SetFilterColor (INT16U usFilterColorLow, INT16U usFilterColorHigh);

/*
 *  文本显示
 */
/*********************************************************************************************************
** 函数名称:  ZTM_PutText
** 函数功能:  指定坐标位置(x, y)写汉字、ASCII码字符串
** 输入参数:  usX：          x坐标
**            usY：          y坐标
**            *pucStr：      字符串指针
**            ucType：       字库类型
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_PutText (INT16U usX, INT16U usY,
                          INT8U *pucStr, INT8U ucType);
              
/*
 *  置点
 */
/*********************************************************************************************************
** 函数名称:  ZTM_PutDot
** 函数功能:  指定位置和颜色画点
** 输入参数:  usxAddr：      x轴坐标
**            usyaddr：      y轴坐标
**            usColor：      点填充颜色
** 输出参数:   无
** 返 回 值:      正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_PutDot (INT16U usxAddr, INT16U usyAddr, INT16U usColor);

/*********************************************************************************************************
** 函数名称:  ZTM_PutNDot
** 函数功能:  指定位置和颜色画多个点
** 输入参数:  *pusStr：      点坐标指针
**            ulNum：        点个数
**            usColor：      点填充颜色
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern void ZTM_PutNDot (INT16U *pusStr, INT32U ulNum, INT16U usColor);

/*********************************************************************************************************
** 函数名称:  ZTM_BColorPutNDot
** 函数功能:  背景色画多个点(删除点)
** 输入参数:  *pusStr：      点坐标指针
**            ulNum：        点个数
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern void ZTM_BColorPutNDot (INT16U *pusStr, INT32U ulNum);

/*********************************************************************************************************
** 函数名称:  ZTM_FColorPutNDot
** 函数功能:  前景色画多个点
** 输入参数:  *pusStr：      点坐标指针
**            ulNum：        点个数
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern void ZTM_FColorPutNDot (INT16U *pusStr, INT32U ulNum);

/*
 *  画线段和多边形
 */
/*********************************************************************************************************
** 函数名称:  ZTM_FColorPutLine
** 函数功能:  指定两点(x1, y1)，(x2, y2)用前景色画线
** 输入参数:  usX1：         x1坐标
**            usY1：         y1坐标
**            usX2：         x2坐标
**            usY2：         y2坐标
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_FColorPutLine (INT16U usX1, INT16U usY1,
                                INT16U usX2, INT16U usY2);

/*********************************************************************************************************
** 函数名称:  ZTM_BColorPutLine
** 函数功能:  指定两点(x1, y1)，(x2, y2)用背景色画线
** 输入参数:  usX1：         x1坐标
**            usY1：         y1坐标
**            usX2：         x2坐标
**            usY2：         y2坐标
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_BColorPutLine (INT16U usX1, INT16U usY1,
                                INT16U usX2, INT16U usY2);

/*********************************************************************************************************
** 函数名称:  ZTM_PutSpectral
** 函数功能:  前景色快速显示频谱
** 输入参数:  usX、usY:      起点坐标
**            usHeightMax:   频谱最大幅值
**            *pusStr:       usHeight0～n――频谱图X轴方向按像素递增对应的频谱幅值
**            ulNum：        频谱线条数
** 输出参数： 无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_PutSpectral (INT16U usX, INT16U usY,
                             INT16U usHeightMax, INT16U *pusStr,
                             INT32U ulNum);


/*********************************************************************************************************
** 函数名称:  ZTM_PutFoldline
** 函数功能:  前景色快速显示折线图
** 输入参数:  usX：          起点坐标
**            ucXdis：       X轴步进增加量
**            *pusStr：      Y0～Yn――折线图y值指针
**            ulNum：        折线拐点数
** 输出参数： 无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_PutFoldline (INT16U usX, INT8U ucXdis,
                              INT16U *pusStr, INT32U ulNum);

/*
 *  圆弧或圆域
 */
/*********************************************************************************************************
** 函数名称:  ZTM_Circle
** 函数功能:  画圆
** 输入参数:  ucType：       0x00:前景色反色显示圆弧
**                           0x01:前景色显示圆弧
**                           0x02:前景色反色显示圆域
**                           0x03:前景色显示圆域
**            usx0Addr：     圆心x0坐标
**            usy0Addr：     圆心y0坐标
**            usR：          半径
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_Circle (INT8U ucType, INT16U usx0Addr,
                         INT16U usy0Addr, INT16U usR);

/*
 * 画椭圆
 */
/*********************************************************************************************************
** 函数名称:  ZTM_EllipseFill
** 函数功能:  画实心椭圆
** 输入参数:  usx0Addr：     圆心x0坐标
**            usy0Addr：     圆心y0坐标
**            usRL：         长轴
**            usRS：         短轴
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_EllipseFill (INT16U usx0Addr, INT16U usy0Addr,
                              INT16U usRL, INT16U usRS);

/*********************************************************************************************************
** 函数名称:  ZTM_Ellipse
** 函数功能:  画空心椭圆
** 输入参数:  usx0Addr：     圆心x0坐标
**            usy0Addr：     圆心y0坐标
**            usRL：         长轴
**            usRS：         短轴
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_Ellipse (INT16U usx0Addr, INT16U usy0Addr, INT16U usRL, INT16U usRS);

/*
 *  矩形框
 */
/*********************************************************************************************************
** 函数名称:  ZTM_FcolorRectangle
** 函数功能:  前景色显示矩形框
** 输入参数:  usx0Addr：     x0坐标
**            usy0Addr：     y0坐标
**            usx1Addr：     x1坐标
**            usy1Addr：     y1坐标
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U  ZTM_FcolorRectangle (INT16U usx0Addr, INT16U usy0Addr,
                                   INT16U usx1Addr, INT16U usy1Addr);

/*********************************************************************************************************
** 函数名称:  ZTM_Square
** 函数功能:  画正方形
** 输入参数:  usx0Addr：     x0坐标
**            usy0Addr：     y0坐标
**            usWidth：      边长
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_Square (INT16U usx0Addr, INT16U usy0Addr, INT16U usWidth);

/*********************************************************************************************************
** 函数名称:  ZTM_BcolorRectangle
** 函数功能:  背景色显示矩形框
** 输入参数:  usx0Addr：     x0坐标
**            usy0Addr：     y0坐标
**            usx1Addr：     x1坐标
**            usy1Addr：     y1坐标
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U  ZTM_BcolorRectangle (INT16U usx0Addr, INT16U usy0Addr,
                                   INT16U usx1Addr, INT16U usy1Addr);

/*
 *  区域操作
 */
/*********************************************************************************************************
** 函数名称:  ZTM_RectangleFill
** 函数功能:  指定区域填充
** 输入参数:  usx0Addr:      x0坐标
**            usy0Addr：     y0坐标
**            usx1Addr：     x1坐标
**            usy1Addr：     y1坐标
**            uiColor:       填充颜色
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_RectangleFill (INT16U usx0Addr, INT16U usy0Addr,
                                INT16U usx1Addr, INT16U usy1Addr,
                                INT16U usColor);

/*********************************************************************************************************
** 函数名称:  ZTM_SquareFill
** 函数功能:  填充正方形
** 输入参数:  usx0Addr：     x0坐标
**            usy0Addr：     y0坐标
**            usWidth：      边长
**            usColor：      填充颜色
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_SquareFill (INT16U usx0Addr, INT16U usy0Addr, INT16U usWidth, INT16U usColor);

/*
 * 清屏操作
 */
/*********************************************************************************************************
** 函数名称:  ZTM_ClrScreen
** 函数功能:  用指定颜色清屏
** 输入参数:  usColor：      清屏颜色
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_ClrScreen (INT16U usColor);

/*
 * 图片图标显示
 */
/*********************************************************************************************************
** 函数名称:  ZTM_FullScreenImageDisp
** 函数功能:  显示一幅全屏图像
** 输入参数:  usPictureID：  Flash中图片编号0-PICTURE_ID_MAX
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_FullScreenImageDisp (INT16U usPictureID);

/*********************************************************************************************************
** 函数名称:  ZTM_PartImageDisp
** 函数功能:  剪切图像的一部分显示
** 输入参数:  usPictureID：  Flash中图片编号0-PICTURE_ID_MAX
**            usx0Addr：     图片左上角X坐标
**            usy0Addr：     图片左上角Y坐标
**            usx1Addr：     图片右下角X坐标
**            usy1Addr：     图片右下角Y坐标
**            usxAddrDisp：  图片显示位置左上角坐标
**            usyAddrDisp：  图片显示位置左上角坐标
**            ucType         0:不过滤颜色
**                           1:过滤颜色,透明效果
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_PartImageDisp (INT16U usPictureID, INT16U usx0Addr,
                                INT16U usy0Addr, INT16U usx1Addr,
                                INT16U usy1Addr, INT16U usxAddrDisp,
                                INT16U usyAddrDisp, INT8U ucType);


/*********************************************************************************************************
** 函数名称:  ZTM_ImageDisp
** 函数功能:  指定位置显示图片
** 输入参数:  usPictureID:   Flash中图片编号0-PICTURE_ID_MAX
**            usxAddrDisp:   图片显示位置左上角X坐标
**            usyAddrDisp：  图片显示位置左上角Y坐标
**            ucType：       0:不过滤颜色
**                           1:过滤颜色,透明效果
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_ImageDisp (INT8U usPictureID,INT16U usxAddrDisp,
                            INT16U usyAddrDisp,INT8U ucType);

/*
 * 动画功能
 */
/*********************************************************************************************************
** 函数名称:  ZTM_Cartoon
** 函数功能:  按预设时间进行动画显示
** 输入参数:  *pusPictureID：Flash中图片编号0-PICTURE_ID_MAX
**            usNum：        动画显示图片张数
** 输出参数： 无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_Cartoon (INT16U *pusPictureID, INT16U usNum);

/*********************************************************************************************************
** 函数名称:  ZTM_SetCartoon
** 函数功能:  指定参数进行动画显示
** 输入参数:  ucTime：            取值为 0～255，表示每张图片播放的时间长度，单位为 100毫秒。
**            ucType：              0x00：按原图显示，不进行颜色过滤；
**                                0x01：过滤颜色显示，背景为 usColorPicId 图片；
**                                0x02：过滤颜色显示，背景为填充 usColorPicId 颜色
**                                0x04：过滤颜色显示，直接前景显示；
**            usColorOrPicId：    背景填充颜色（16 位色）或背景图片 ID；
**            usFilterColorLow：  颜色过滤低阈值，当显示类型为 00 时，此参数无效；
**            usFilterColorHight：颜色过滤高阈值，当显示类型为 00 时，此参数无效；
**            usX：               动画显示的起始 X坐标；
**            usY：               动画显示的起始 Y坐标；
**            pusPictureID：      Flash中图片编号0-PICTURE_ID_MAX
**            usNum：             动画显示图片张数
** 输出参数： 无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetCartoon (INT8U ucTime, INT8U ucType, INT16U usColorOrPicId,
                             INT16U usFilterColorLow, INT16U usFilterColorHight,
                             INT16U usX, INT16U usY,
                             INT16U *pusPictureID, INT16U usNum);

/*
 * 触摸屏操作
 */
/*********************************************************************************************************
** 函数名称:  ZTM_TouchCalibration
** 函数功能:  触摸屏校准(注意只有第一次使用触摸屏时需要校准)
** 输入参数:  无
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_TouchCalibration (void);

/*********************************************************************************************************
** 函数名称:  ZTM_TouchMode
** 函数功能:  触摸屏按键模式
** 输入参数:  ucTouchMode    0：摸屏松开后，上传最后一次数据
**                           1: 触摸屏按下时，上传数据
**                           2: 触摸屏按下状态中，实时上传数据
**                           3: 触控界面自动切换模式下，预设键码自动上传(保留)
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_TouchMode (INT8U ucTouchMode);

/*********************************************************************************************************
** 函数名称:  ZTM_CheckTouchPos
** 函数功能:  主动查询触摸笔当前位置
** 输入参数:  无
** 输出参数:  无
** 返 回 值:  无
** 说    明； 2012-02-22
*********************************************************************************************************/
extern void ZTM_CheckTouchPos (void);

/*
 * 蜂鸣器操作
 */
/*********************************************************************************************************
** 函数名称:  ZTM_SetBuzzer
** 函数功能:  蜂鸣器操作
** 输入参数:  ucTime ：蜂鸣器鸣响的时间长度，单位是10ms，值为0~255，
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_SetBuzzer (INT8U ucTime);

/*
 * 背光控制
 */
/*********************************************************************************************************
** 函数名称:  ZTM_LightOnOff
** 函数功能:  背光控制
** 输入参数:  ucOnOff：      0:  关背光
**                           1:  开背光
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_LightOnOff (INT8U ucOnOff);

/*********************************************************************************************************
** 函数名称:  ZTM_LightTimeTouch
** 函数功能:  背光设置
** 输入参数:  ucPWMOn ：背光有效时的亮度
**            ucPWMOff：背光无效时的亮度
**            ucOnTime: 背光有效时间，单位为秒
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_LightTimeTouch (INT8U ucPWMOn, INT8U ucPWMOff, INT8U ucOnTime);

/*********************************************************************************************************
** 函数名称:  ZTM_LightLevel
** 函数功能:  背光灰度等级
** 输入参数:  ucPWMLevel：   0-100
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_LightLevel (INT8U ucPWMLevel);

/*
 * 参数配置
 */
/*********************************************************************************************************
** 函数名称:  ZTM_SetPara
** 函数功能:  参数配置
** 输入参数:  ulBaud：             串口波特率：             1200-3152000bps
**            ucTouchType：        触摸屏数据上传格式:      0x72或0x73
**            ucBackLightType：    背光控制模式:            0x5E或0x5F
**            ucTxtBackgroundType：文本背景显示模式         0:文本背景色为系统背景色(默认)
**                                                          1:文本背景色为透明
**            INT8U ucMouseType：  点击触摸屏时鼠标显示模式 0:不显示鼠标(默认)
**                                                          :显示鼠标
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetPara (INT32U ulBaud, INT8U ucTouchType, INT8U ucBackLightType,
                          INT8U ucTxtBackgroundType, INT8U ucMouseType);

/*********************************************************************************************************
** 函数名称:  ZTM_SetBaudrate
** 函数功能:  设置通信波特率
** 输入参数:  ulBaud：串口波特率，1200-3152000bps
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetBaudrate (INT32U ulBaud);

/*********************************************************************************************************
** 函数名称:  ZTM_SetDisplayBuf
** 函数功能:  设置显示缓存属性
** 输入参数:  ucDisplayBuf：目标显示缓存属性值
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_SetDisplayBuf (INT8U ucDisplayBuf);

/*********************************************************************************************************
** 函数名称:  ZTM_SetAck
** 函数功能:  设置串口屏应答功能
** 输入参数:  ucAckEn：应答功能设置值，0――禁能命令应答；1――使能命令应答
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetAck (INT8U ucAckEn);

/*********************************************************************************************************
** 函数名称:  ZTM_SetTouchType
** 函数功能:  设置触摸屏响应类型
** 输入参数:  ucTouchType：触摸屏响应类型值，0x72――非触控模式下，触摸笔抬起时，上传坐标数据
**                                           0x73――非触控模式下，触摸笔按下时，上传坐标数据
**                                           0x74――非触控模式下，触摸笔移动时，上传坐标数据
**                                           0x78――触控模式下，触摸笔抬起时，上传预设触控键码
**                                           0x79――触控模式下，触摸笔按下时，上传预设触控键码
**                                           0x7A――触控模式下，触摸笔按下和抬起时，上传预设触控键码
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetTouchType(INT8U ucTouchType);

/*********************************************************************************************************
** 函数名称:  ZTM_SetBuzzerType
** 函数功能:  设置蜂鸣器配置
** 输入参数:  ucBuzzerType：蜂鸣器配置值
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetBuzzerType (INT8U ucBuzzerType);

/*********************************************************************************************************
** 函数名称:  ZTM_SetTxtBackgroundType
** 函数功能:  设置文本控件显示背景类型
** 输入参数:  ucTxtBackgroundType：文本显示背景类型值，0――文本的背景色为系统的背景色（默认）
**                                                     1――文本的背景色为透明
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetTxtBackgroundType(INT8U ucTxtBackgroundType);

/*********************************************************************************************************
** 函数名称:  ZTM_SetSysMouseType
** 函数功能:  设置点击触摸屏时系统鼠标是否显示
** 输入参数:  ucSysMouseType：指示点击触摸屏时系统图标是否显示，0――不显示（默认）
**                                                              1――显示
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetSysMouseType(INT8U ucSysMouseType);

/*********************************************************************************************************
** 函数名称:  ZTM_SetSumCheckType
** 函数功能:  设置通信和校验类型
** 输入参数:  ucSumCheckype：通信和校验类型值，0――无校验（默认）
**                                             1――8位和校验
**                                             2――16位和校验
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetSumCheckType (INT8U ucSumCheckType);

/*********************************************************************************************************
** 函数名称:  ZTM_SetTouchDelay
** 函数功能:  设置触摸屏动作响应时间
** 输入参数:  ulTouchDly：触摸屏动作响应时间
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_SetTouchDelay (INT32U ulTouchDly);

/*
 * 器件信息
 */
/*********************************************************************************************************
** 函数名称:  ZTM_ReadDeviceInfo
** 函数功能:  发送读取串口屏器件信息
** 输入参数:  无
** 输出参数:  无
** 返 回 值:  无
*********************************************************************************************************/
extern void ZTM_ReadDeviceInfo (void);

/*********************************************************************************************************
** 函数名称:  ZTM_OptDisBufDirectly
** 函数功能:  直接显存操作
** 输入参数:  usX0         ：操作区域起始点X坐标；
**            usY0         ：操作区域起始点Y坐标；
**            usX1         ：操作区域结束点X坐标；
**            usY1         ：操作区域结束点Y坐标；
**            usXRef       ：操作区域内参考点X坐标；
**            usYRef       ：操作区域内参考点Y坐标；
**            ulNBytes     ：填充颜色值字节数；
**            pucColorValue：填充的颜色值数据
** 输出参数:  无
** 返 回 值:  成功返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_OptDisBufDirectly (INT16U usX0, 
							        INT16U usY0,
							        INT16U usX1,
							        INT16U usY1,
							        INT16U usXRef,
							        INT16U usYRef,
							        INT32U ulNBytes,
							        INT8U *pucColorValue);

/*********************************************************************************************************
** 函数名称:  ZTM_FileDownload
** 函数功能:  字库或配置文件下载
** 输入参数:  ucType     ：下载文件类型值；
**            ulSize     ：下载文件长度；
**            pucOption  ：可选参数列表指针；
**            ucOptNBytes：可选参数列表长度。
** 输出参数:  无
** 返 回 值:  正确返回1，否则返回0
*********************************************************************************************************/
extern INT8U ZTM_FileDownload(INT8U ucType, INT32U ulSize, INT8U *pucOption, INT8U ucOptNBytes);
                
extern INT8U TXM_StringDisplay(u16 tid,
                          u16 usX, u16 usY,
                          u8 size, u8 BCdis,
                          u16 usFcolor, u16 usBcolor, u8 *pucStr);
//option8
extern INT8U TXM_FillTextWidget(INT16U Tid, char *pucStr);

//数值显示
extern INT8U TXM_DigitDisplay(u16 tid,
                          u16 x,u16 y,u8 size,u8 BCdis,u16 usFcolor,u16 usBcolor,
                          u32 dat,u8 bits,u8 dot,u8 align);
//option
extern INT8U TXM_DigitDisplayWidget(INT16U Tid, INT16U len, INT32U dat);

extern void ZTM_DisBufSwitch (INT8U ucCmd);

#endif
/*********************************************************************************************************
  END FILE
*********************************************************************************************************/

